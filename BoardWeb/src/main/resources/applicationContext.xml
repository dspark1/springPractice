<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

	
	<context:component-scan base-package="com.springbook.biz">
	</context:component-scan>
	
	<!--  <bean id="log" class="com.springbook.biz.common.LogAdvice"></bean>  -->
	<!--  <bean id="before" class="com.springbook.biz.common.BeforeAdvice"></bean>  -->
	<!--  <bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"></bean> -->
	<!-- <bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"></bean> -->

	<!-- <bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"></bean>
	<bean id="after" class="com.springbook.biz.common.AfterAdvice"></bean> -->
	
	<bean id="around" class="com.springbook.biz.common.AroundAdvice"></bean>
	 
	<aop:config>
		<aop:pointcut id="allPointcut"
						expression="execution(* com.springbook.biz..*Impl.*(..))"/>
		<aop:pointcut id="getPointcut"
						expression="execution(* com.springbook.biz..*Impl.get*(..))"/>
						
		<!-- <aop:aspect ref="log">
			<aop:after pointcut-ref="getPointcut" method="printLog"/> -->
			
		<!-- <aop:aspect ref="afterReturning">
			<aop:after-returning pointcut-ref="getPointcut" method="afterLog"/>   -->
			
		<!-- <aop:aspect ref="afterThrowing">	
			<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog"/>
		</aop:aspect> -->
		
		<!-- <aop:aspect ref="after">
			<aop:after pointcut-ref="allPointcut" method="finallyLog"/>
		</aop:aspect>
		
		<aop:aspect ref="afterThrowing">
			<aop:after pointcut-ref="allPointcut" method="exceptionLog"/>
		</aop:aspect> -->
		
		<aop:aspect ref="around">
			<aop:around pointcut-ref="allPointcut" method="aroungLog"/>
		</aop:aspect>
		
	</aop:config>
	<!-- 
	<bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">
		<property name="userDAO" ref="userDAO" />
	</bean>
	
	<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO" />
	
	 -->
	<!--
	
	<context:component-scan base-package="polymorphism"></context:component-scan>
	<bean id="speaker" class="polymorphism.AppleSpeaker"></bean>
	
		<bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean">
			<property name="addressList">
				<set value-type="java.lang.String">
					<value>서울시 강남구 역삼동</value>
					<value>서울시 성동구 행당동</value>
					<value>서울시 성동구 행당동</value>
				</set>
			</property>
		</bean>
	-->
	<!--  
		<bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean">
			<property name="addressList">
				<list>
					<value>서울시 강남구 역삼동</value>
					<value>서울시 성동구 행당동</value>
				</list>
			</property>
		</bean>
 	-->
	<!--
		<bean id="tv" class="polymorphism.SamsungTV" p:speaker-ref="sony" p:price="2700000"/>
		<bean id="tv" class="polymorphism.SamsungTV">
		
		
		setter 활용(주로 setter를 사용)
		<property name="speaker" ref="apple"></property>
		<property name="price" value="2700000"></property>
		
		생성자 활용
		<constructor-arg index="0" ref="sony"></constructor-arg>
		<constructor-arg index="1" value="2700000"></constructor-arg>
		</bean>
		
		<bean id="sony" class="polymorphism.SonySpeaker"></bean>
		<bean id="apple" class="polymorphism.AppleSpeaker"></bean>
	-->	
</beans>
